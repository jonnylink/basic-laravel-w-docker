worker_processes auto;
error_log stderr warn;
pid /run/nginx.pid;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections  64000;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    # Define custom log format to include reponse times
    log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" "$http_x_forwarded_for" '
                     '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main;
    error_log /dev/stderr notice;

    charset             utf-8;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    server_tokens       off;
    keepalive_timeout   960;
    types_hash_max_size 4096;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;
    gzip_vary on;

    # Include other server configs
    include /etc/nginx/conf.d/*.conf;
}